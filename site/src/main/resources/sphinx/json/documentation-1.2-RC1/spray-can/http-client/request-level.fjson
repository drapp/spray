{"body": "<div class=\"section\" id=\"request-level-api\">\n<span id=\"requestlevelapi\"></span><h1>Request-level API</h1>\n<p>The request-level API is the most convenient way of using <em>spray-can</em>&#8216;s client-side. It internally builds upon the\n<a class=\"reference internal\" href=\"../host-level/#hostlevelapi\"><em>Host-level API</em></a> to provide you with a simple and easy-to-use way of retrieving HTTP responses from remote servers.</p>\n<p>Just send an <tt class=\"docutils literal\"><span class=\"pre\">HttpRequest</span></tt> instance to the <tt class=\"docutils literal\"><span class=\"pre\">Http</span></tt> extensions like this:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nn\">akka.io.IO</span>\n<span class=\"k\">import</span> <span class=\"nn\">akka.pattern.ask</span>\n<span class=\"k\">import</span> <span class=\"nn\">spray.can.Http</span>\n<span class=\"k\">import</span> <span class=\"nn\">spray.http._</span>\n<span class=\"k\">import</span> <span class=\"nn\">HttpMethods._</span>\n\n<span class=\"k\">val</span> <span class=\"n\">response</span><span class=\"k\">:</span> <span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">HttpResponse</span><span class=\"o\">]</span> <span class=\"k\">=</span>\n  <span class=\"o\">(</span><span class=\"nc\">IO</span><span class=\"o\">(</span><span class=\"nc\">Http</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"nc\">HttpRequest</span><span class=\"o\">(</span><span class=\"nc\">GET</span><span class=\"o\">,</span> <span class=\"nc\">Uri</span><span class=\"o\">(</span><span class=\"s\">&quot;http://spray.io&quot;</span><span class=\"o\">))).</span><span class=\"n\">mapTo</span><span class=\"o\">[</span><span class=\"kt\">HttpResponse</span><span class=\"o\">]</span>\n\n<span class=\"c1\">// or, with making use of spray-httpx</span>\n<span class=\"k\">import</span> <span class=\"nn\">spray.httpx.RequestBuilding._</span>\n\n<span class=\"k\">val</span> <span class=\"n\">response2</span><span class=\"k\">:</span> <span class=\"kt\">Future</span><span class=\"o\">[</span><span class=\"kt\">HttpResponse</span><span class=\"o\">]</span> <span class=\"k\">=</span>\n  <span class=\"o\">(</span><span class=\"nc\">IO</span><span class=\"o\">(</span><span class=\"nc\">Http</span><span class=\"o\">)</span> <span class=\"o\">?</span> <span class=\"nc\">Get</span><span class=\"o\">(</span><span class=\"s\">&quot;http://spray.io&quot;</span><span class=\"o\">)).</span><span class=\"n\">mapTo</span><span class=\"o\">[</span><span class=\"kt\">HttpResponse</span><span class=\"o\">]</span>\n</pre></div>\n</div>\n<p>The request you send to <tt class=\"docutils literal\"><span class=\"pre\">IO(Http)</span></tt> must have an absolute URI or contain a <tt class=\"docutils literal\"><span class=\"pre\">Host</span></tt> header. <em>spray-can</em> will forward\nit to the host connector (see <a class=\"reference internal\" href=\"../host-level/#hostlevelapi\"><em>Host-level API</em></a>) for the target host (and start it up if it is not yet running).</p>\n<p>If you want to specify config settings for either the host connector or the underlying connections that differ from\nwhat you have configured in your <tt class=\"docutils literal\"><span class=\"pre\">application.conf</span></tt> you can either &#8220;prime&#8221; a host connector by sending an explicit\n<tt class=\"docutils literal\"><span class=\"pre\">Http.HostConnectorSetup</span></tt> command before issuing the first request to this host or send a tuple\n<tt class=\"docutils literal\"><span class=\"pre\">(Request,</span> <span class=\"pre\">Http.HostConnectorSetup)</span></tt> combining the request with the <tt class=\"docutils literal\"><span class=\"pre\">Http.HostConnectorSetup</span></tt> command. The latter\nalso allows the request to have a relative URI and no host header since the target host is already specified with the\nconnector setup command.</p>\n<p>All other aspects of the request-level API are identical to the host-level counterpart.</p>\n</div>\n", "display_toc": false, "title": "Request-level API", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-can/http-client/request-level", "next": {"link": "../../common-behavior/", "title": "Common Behavior"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-can/common-behavior", "Common Behavior", "N", "next"], ["documentation/spray-can/http-client/host-level", "Host-level API", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-can"}, {"link": "../", "title": "HTTP Client APIs"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Request-level API</a></li>\n</ul>\n", "prev": {"link": "../host-level/", "title": "Host-level API"}, "metatags": ""}