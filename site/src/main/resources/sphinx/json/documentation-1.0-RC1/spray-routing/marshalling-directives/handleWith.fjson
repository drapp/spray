{"body": "<div class=\"section\" id=\"handlewith\">\n<span id=\"id1\"></span><h1>handleWith</h1>\n<p>Completes the request using the given function. The input to the function is produced with\nthe in-scope entity unmarshaller and the result value of the function is marshalled with\nthe in-scope marshaller.  <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> can be a convenient method combining <tt class=\"docutils literal\"><span class=\"pre\">entity</span></tt> with\n<tt class=\"docutils literal\"><span class=\"pre\">complete</span></tt>.</p>\n<div class=\"section\" id=\"signature\">\n<h2>Signature</h2>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">handleWith</span><span class=\"o\">[</span><span class=\"kt\">A</span>, <span class=\"kt\">B</span><span class=\"o\">](</span><span class=\"n\">f</span><span class=\"k\">:</span> <span class=\"kt\">A</span> <span class=\"k\">\u21d2</span> <span class=\"kt\">B</span><span class=\"o\">)(</span><span class=\"k\">implicit</span> <span class=\"n\">um</span><span class=\"k\">:</span> <span class=\"kt\">FromRequestUnmarshaller</span><span class=\"o\">[</span><span class=\"kt\">A</span><span class=\"o\">],</span> <span class=\"n\">m</span><span class=\"k\">:</span> <span class=\"kt\">ToResponseMarshaller</span><span class=\"o\">[</span><span class=\"kt\">B</span><span class=\"o\">])</span><span class=\"k\">:</span> <span class=\"kt\">Route</span> \n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"description\">\n<h2>Description</h2>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> directive is used when you want to handle a route with a given function of\ntype A \u21d2 B.  <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> will use both an in-scope unmarshaller to convert a request into\ntype A and an in-scope marshaller to convert type B into a response. This is helpful when your\ncore business logic resides in some other class or you want your business logic to be independent\nof <em>Spray</em>. You can use <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> to &#8220;hand off&#8221; processing to a given function without requiring\nany spray-specific functionality.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> is similar to <tt class=\"docutils literal\"><span class=\"pre\">produce</span></tt>.  The main difference is <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> automatically\ncalls <tt class=\"docutils literal\"><span class=\"pre\">complete</span></tt> when the function passed to <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt> returns. Using <tt class=\"docutils literal\"><span class=\"pre\">produce</span></tt> you\nmust explicity call the completion function passed from the <tt class=\"docutils literal\"><span class=\"pre\">produce</span></tt> function.</p>\n<p>See <a class=\"reference internal\" href=\"../../../spray-httpx/marshalling/#marshalling\"><em>marshalling</em></a> and <a class=\"reference internal\" href=\"../../../spray-httpx/unmarshalling/#unmarshalling\"><em>unmarshalling</em></a> for guidance\non marshalling entities with Spray.</p>\n</div>\n<div class=\"section\" id=\"examples\">\n<h2>Examples</h2>\n<p>The following example uses an <tt class=\"docutils literal\"><span class=\"pre\">updatePerson</span></tt> function with a <tt class=\"docutils literal\"><span class=\"pre\">Person</span></tt> case class as an input and output.  We plug this function into our route using <tt class=\"docutils literal\"><span class=\"pre\">handleWith</span></tt>.</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"o\">(</span><span class=\"n\">name</span><span class=\"k\">:</span> <span class=\"kt\">String</span><span class=\"o\">,</span> <span class=\"n\">favoriteNumber</span><span class=\"k\">:</span> <span class=\"kt\">Int</span><span class=\"o\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nn\">PersonJsonSupport._</span>\n\n<span class=\"k\">val</span> <span class=\"n\">updatePerson</span> <span class=\"k\">=</span> <span class=\"o\">(</span><span class=\"n\">person</span><span class=\"k\">:</span> <span class=\"kt\">Person</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span> <span class=\"o\">{</span>\n\n  <span class=\"c1\">//... some processing logic...</span>\n\n  <span class=\"c1\">//return the person</span>\n  <span class=\"n\">person</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">val</span> <span class=\"n\">route</span> <span class=\"k\">=</span> <span class=\"n\">post</span> <span class=\"o\">{</span>\n  <span class=\"n\">handleWith</span><span class=\"o\">(</span><span class=\"n\">updatePerson</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n\n <span class=\"nc\">Post</span><span class=\"o\">(</span><span class=\"s\">&quot;/&quot;</span><span class=\"o\">,</span> <span class=\"nc\">HttpEntity</span><span class=\"o\">(</span><span class=\"n\">`application/json`</span><span class=\"o\">,</span> <span class=\"s\">&quot;&quot;&quot;{ &quot;name&quot;: &quot;Jane&quot;, &quot;favoriteNumber&quot; : 42 }&quot;&quot;&quot;</span> <span class=\"o\">))</span> <span class=\"o\">~&gt;</span>\n  <span class=\"n\">route</span> <span class=\"o\">~&gt;</span> <span class=\"n\">check</span> <span class=\"o\">{</span>\n    <span class=\"n\">mediaType</span> <span class=\"o\">===</span> <span class=\"n\">`application/json`</span>\n    <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"n\">must</span> <span class=\"n\">contain</span><span class=\"o\">(</span><span class=\"s\">&quot;&quot;&quot;&quot;name&quot;: &quot;Jane&quot;&quot;&quot;&quot;</span><span class=\"o\">)</span>\n    <span class=\"n\">responseAs</span><span class=\"o\">[</span><span class=\"kt\">String</span><span class=\"o\">]</span> <span class=\"n\">must</span> <span class=\"n\">contain</span><span class=\"o\">(</span><span class=\"s\">&quot;&quot;&quot;&quot;favoriteNumber&quot;: 42&quot;&quot;&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n</pre></div>\n</div>\n<p>The PersonJsonSupport object handles both marshalling and unmarshalling of the Person case class.</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">object</span> <span class=\"nc\">PersonJsonSupport</span> <span class=\"k\">extends</span> <span class=\"nc\">DefaultJsonProtocol</span> <span class=\"k\">with</span> <span class=\"nc\">SprayJsonSupport</span> <span class=\"o\">{</span>\n   <span class=\"k\">implicit</span> <span class=\"k\">val</span> <span class=\"nc\">PortofolioFormats</span> <span class=\"k\">=</span> <span class=\"n\">jsonFormat2</span><span class=\"o\">(</span><span class=\"nc\">Person</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "display_toc": true, "title": "handleWith", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/marshalling-directives/handleWith", "next": {"link": "../../method-directives/", "title": "MethodDirectives"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/method-directives/index", "MethodDirectives", "N", "next"], ["documentation/spray-routing/marshalling-directives/produce", "produce", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../../predefined-directives-by-trait/", "title": "Predefined Directives (by trait)"}, {"link": "../", "title": "Marshalling Directives"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">handleWith</a><ul>\n<li><a class=\"reference internal\" href=\"#signature\">Signature</a></li>\n<li><a class=\"reference internal\" href=\"#description\">Description</a></li>\n<li><a class=\"reference internal\" href=\"#examples\">Examples</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../produce/", "title": "produce"}, "metatags": ""}