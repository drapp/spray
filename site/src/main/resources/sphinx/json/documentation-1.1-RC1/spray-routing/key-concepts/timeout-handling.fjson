{"body": "<div class=\"section\" id=\"timeout-handling\">\n<h1>Timeout Handling</h1>\n<p><em>spray-routing</em> itself does not perform any timeout checking, it relies on the underlying <a class=\"reference internal\" href=\"../../../spray-can/#spray-can\"><em>spray-can</em></a> or\n<a class=\"reference internal\" href=\"../../../spray-servlet/#spray-servlet\"><em>spray-servlet</em></a> module to watch for request timeouts. Both, the <a class=\"reference internal\" href=\"../../../spray-can/#spray-can\"><em>spray-can</em></a> <a class=\"reference internal\" href=\"../../../spray-can/http-server/#http-server\"><em>HTTP Server</em></a> and\n<a class=\"reference internal\" href=\"../../../spray-servlet/#spray-servlet\"><em>spray-servlet</em></a>, define a <tt class=\"docutils literal\"><span class=\"pre\">timeout-handler</span></tt> config setting, which allows you to specify the path of the actor\nto send <tt class=\"docutils literal\"><span class=\"pre\">spray.http.Timedout</span></tt> messages to whenever a request timeout occurs. By default all <tt class=\"docutils literal\"><span class=\"pre\">Timedout</span></tt> messages\ngo to same actor that also handles &#8220;regular&#8221; request, i.e. your service actor.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">Timedout</span></tt> is a simple wrapper around <tt class=\"docutils literal\"><span class=\"pre\">HttpRequest</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">ChunkedRequestStart</span></tt> instances:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">case</span> <span class=\"k\">class</span> <span class=\"nc\">Timedout</span><span class=\"o\">(</span><span class=\"n\">request</span><span class=\"k\">:</span> <span class=\"kt\">HttpRequestPart</span> <span class=\"kt\">with</span> <span class=\"kt\">HttpMessageStart</span><span class=\"o\">)</span>\n</pre></div>\n</div>\n<p>If a <tt class=\"docutils literal\"><span class=\"pre\">Timedout</span></tt> messages hits your service actor <a class=\"reference internal\" href=\"../big-picture/#runroute\"><em>runRoute</em></a> unpacks it and feeds the wrapped request,\ni.e. the one that timed out, to the <tt class=\"docutils literal\"><span class=\"pre\">timeoutRoute</span></tt> defined by the the <a class=\"reference internal\" href=\"../big-picture/#httpservice\"><em>HttpService</em></a>.\nThe default implementation looks like this:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">def</span> <span class=\"n\">timeoutRoute</span><span class=\"k\">:</span> <span class=\"kt\">Route</span> <span class=\"o\">=</span> <span class=\"n\">complete</span><span class=\"o\">(</span>\n  <span class=\"nc\">InternalServerError</span><span class=\"o\">,</span>\n  <span class=\"s\">&quot;The server was not able to produce a timely response to your request.&quot;</span><span class=\"o\">)</span>\n</pre></div>\n</div>\n<p>If you&#8217;d like to customize how your service reacts to request timeouts simply override the <tt class=\"docutils literal\"><span class=\"pre\">timeoutRoute</span></tt> method.</p>\n<p>Alternatively you can also &#8220;catch&#8221; <tt class=\"docutils literal\"><span class=\"pre\">Timedout</span></tt> message before they are handled by <a class=\"reference internal\" href=\"../big-picture/#runroute\"><em>runRoute</em></a> and\nhandle them in any way you want. Here is an example of what this might look like:</p>\n<div class=\"highlight-scala\"><div class=\"highlight\"><pre><span class=\"k\">import</span> <span class=\"nn\">spray.http._</span>\n<span class=\"k\">import</span> <span class=\"nn\">spray.routing._</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyService</span> <span class=\"k\">extends</span> <span class=\"nc\">HttpServiceActor</span> <span class=\"o\">{</span>\n  <span class=\"k\">def</span> <span class=\"n\">receive</span> <span class=\"k\">=</span> <span class=\"n\">handleTimeouts</span> <span class=\"n\">orElse</span> <span class=\"n\">runRoute</span><span class=\"o\">(</span><span class=\"n\">myRoute</span><span class=\"o\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">myRoute</span><span class=\"k\">:</span> <span class=\"kt\">Route</span> <span class=\"o\">=</span> <span class=\"n\">`&lt;my-route-definition&gt;`</span>\n\n  <span class=\"k\">def</span> <span class=\"n\">handleTimeouts</span><span class=\"k\">:</span> <span class=\"kt\">Receive</span> <span class=\"o\">=</span> <span class=\"o\">{</span>\n    <span class=\"k\">case</span> <span class=\"nc\">Timedout</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"k\">:</span> <span class=\"kt\">HttpRequest</span><span class=\"o\">)</span> <span class=\"k\">=&gt;</span>\n      <span class=\"n\">sender</span> <span class=\"o\">!</span> <span class=\"nc\">HttpResponse</span><span class=\"o\">(</span><span class=\"nc\">StatusCodes</span><span class=\"o\">.</span><span class=\"nc\">InternalServerError</span><span class=\"o\">,</span> <span class=\"s\">&quot;Too late&quot;</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>\n</div>\n</div>\n", "display_toc": false, "title": "Timeout Handling", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-routing/key-concepts/timeout-handling", "next": {"link": "../../advanced-topics/", "title": "Advanced Topics"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-routing/advanced-topics/index", "Advanced Topics", "N", "next"], ["documentation/spray-routing/key-concepts/exception-handling", "Exception Handling", "P", "previous"]], "meta": {}, "parents": [{"link": "../../../", "title": "Documentation"}, {"link": "../../", "title": "spray-routing"}, {"link": "../", "title": "Key Concepts"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Timeout Handling</a></li>\n</ul>\n", "prev": {"link": "../exception-handling/", "title": "Exception Handling"}, "metatags": ""}